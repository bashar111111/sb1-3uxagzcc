require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const { createClient } = require('@supabase/supabase-js');
const { ROAD_STATUS } = require('./config/constants');
const { requestNewLocation, handleLocationApproval } = require('./handlers/locationRequests');
const { addStatusUpdate, getLatestUpdates } = require('./handlers/statusUpdates');

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });
const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

// ุฃูุงูุฑ ุงูุชุญุฏูุซุงุช
bot.onText(/\/status (.+)/, (msg) => addStatusUpdate(bot, supabase, msg));
bot.onText(/\/updates/, (msg) => getLatestUpdates(bot, supabase, msg));

// ุฃูุงูุฑ ุงูููุงูุน
bot.onText(/\/request_location (.+)/, (msg) => requestNewLocation(bot, supabase, msg));
bot.onText(/\/approve_location (.+)/, (msg) => handleLocationApproval(bot, supabase, msg, true));
bot.onText(/\/reject_location (.+)/, (msg) => handleLocationApproval(bot, supabase, msg, false));

// ุฑุณุงูุฉ ุงูุจุฏุงูุฉ
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, `ูุฑุญุจุงู ุจู ูู ุจูุช ูุฑุงูุจุฉ ุญุงูุฉ ุงูุทุฑู ูู ููุณุทูู! ๐

ุงูุฃูุงูุฑ ุงููุชุงุญุฉ:
๐ /status [ุงูุญุงูุฉ] [ุงููููุน] [ุงููุตู] - ุฅุถุงูุฉ ุชุญุฏูุซ ุฌุฏูุฏ
๐ /updates - ุนุฑุถ ุขุฎุฑ ุงูุชุญุฏูุซุงุช
โ /request_location [ุงูุงุณู] - ุทูุจ ุฅุถุงูุฉ ูููุน ุฌุฏูุฏ

ุญุงูุงุช ุงูุทุฑู ุงููุชุงุญุฉ:
${Object.values(ROAD_STATUS).map(status => `โข ${status}`).join('\n')}

ูููุดุฑููู:
โ /approve_location [ุฑูู_ุงูุทูุจ] - ุงูููุงููุฉ ุนูู ุฅุถุงูุฉ ูููุน
โ /reject_location [ุฑูู_ุงูุทูุจ] - ุฑูุถ ุฅุถุงูุฉ ูููุน`, 
    { parse_mode: 'HTML' });
});